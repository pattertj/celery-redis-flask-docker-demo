version: '3.8'
services:

  worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    command: celery -A app.tasks.tasks worker --loglevel=INFO
    env_file:
      - .env
    stop_signal: SIGINT
    depends_on:
      - redis
    networks:
      - default

  beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    command: celery -A app.tasks.tasks beat -S redbeat.RedBeatScheduler --loglevel=INFO
    env_file:
      - .env
    stop_signal: SIGINT
    depends_on:
      - redis
    networks:
      - default

  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    command: celery -A app.tasks.tasks flower --loglevel=INFO --port=${FLOWER_PORT}
    env_file:
      - .env
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      - redis
      - worker
    networks:
      - default

  redis:
    image: "redis:latest"
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - default

  flask_app:
    build:
      context: .
      dockerfile: Dockerfile.flask
    restart: unless-stopped
    command: ["python3", "app/app.py"]
    stop_signal: SIGINT
    env_file:
      - .env
    ports:
      - '${FLASK_RUN_PORT}:${FLASK_RUN_PORT}'
    depends_on:
      - redis
    networks:
      - default

  prometheus:
    build:
      context: .  # The Dockerfile is in the current directory
      dockerfile: Dockerfile.prometheus  # Use the Dockerfile for Prometheus
    ports:
      - '${PROMETHEUS_PORT}:${PROMETHEUS_PORT}'
    restart: unless-stopped
    volumes:
      - ./volumes/prometheus:/prometheus
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - '${GRAFANA_PORT}:${GRAFANA_PORT}'
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    networks:
      - default

networks:
  default:
    driver: bridge
