version: '3.8'
services:

  worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A app.tasks.tasks worker --loglevel=INFO
    env_file:
      - .env
    stop_signal: SIGINT
    depends_on:
      - redis
    networks:
      - default

  beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A app.tasks.tasks beat -S redbeat.RedBeatScheduler --loglevel=INFO
    env_file:
      - .env
    stop_signal: SIGINT
    depends_on:
      - redis
    networks:
      - default

  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A app.tasks.tasks flower --loglevel=INFO --port=${FLOWER_PORT}
    env_file:
      - .env
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      - redis
      - worker
    networks:
      - default

  redis:
    image: "redis:latest"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - default

  flask_app:
    build:
      context: .
      dockerfile: Dockerfile.flask  # Create a separate Dockerfile for Flask
    command: ["python3", "app/app.py"]
    stop_signal: SIGINT
    env_file:
      - .env
    ports:
      - '${FLASK_RUN_PORT}:${FLASK_RUN_PORT}'
    depends_on:
      - redis
    networks:
      - default

networks:
  default:
    driver: bridge
