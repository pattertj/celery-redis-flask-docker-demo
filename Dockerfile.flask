# Use the official Python image as a parent image
FROM python:3.11-slim as builder

RUN pip install poetry

# Set environment variables for Flask
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0

# Set the working directory inside the container
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

# Copy your local Python code and Poetry files into the container
COPY pyproject.toml poetry.lock ./
RUN touch README.md

RUN poetry install --without dev --no-root && rm -rf $POETRY_CACHE_DIR

# The runtime image, used to just run the code provided its virtual environment
FROM python:3.11-slim as runtime

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

COPY src/app.py /app/
COPY src/tasks/celeryconf.py src/tasks/tasks.py /app/tasks/

# Expose the Flask app port
EXPOSE 8000

# Command to run the Flask app
# CMD [ "python3", "-m" , "flask", "run", "--host=0.0.0.0", "--port=5001"]
ENTRYPOINT ["python3"]
CMD ["app/app.py"]
